{
 "kind": "discovery#restDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/fNhsdf4oMGm1sHsubDqFfvmcX9g\"",
 "discoveryVersion": "v1",
 "id": "happiness:v1",
 "name": "happiness",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "unieins.com",
 "ownerName": "unieins.com",
 "packagePath": "happy",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://uni1-happy.appspot.com/_ah/api/happiness/v1/",
 "basePath": "/_ah/api/happiness/v1/",
 "rootUrl": "https://uni1-happy.appspot.com/_ah/api/",
 "servicePath": "happiness/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "CollectionResponse_Hapiness": {
   "id": "CollectionResponse_Hapiness",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Hapiness"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "CollectionResponse_Project": {
   "id": "CollectionResponse_Project",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Project"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "CollectionResponse_TeachingTerm": {
   "id": "CollectionResponse_TeachingTerm",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "TeachingTerm"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "CollectionResponse_User": {
   "id": "CollectionResponse_User",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "User"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "Hapiness": {
   "id": "Hapiness",
   "type": "object",
   "properties": {
    "datetime": {
     "type": "string",
     "format": "date-time"
    },
    "happiness": {
     "type": "integer",
     "format": "int32"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "projectId": {
     "type": "string",
     "format": "int64"
    },
    "sprint": {
     "type": "integer",
     "format": "int32"
    },
    "teachingTermId": {
     "type": "string",
     "format": "int64"
    },
    "userId": {
     "type": "string"
    },
    "userName": {
     "type": "string"
    }
   }
  },
  "Key": {
   "id": "Key",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "complete": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "kind": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "namespace": {
     "type": "string"
    },
    "parent": {
     "$ref": "Key"
    }
   }
  },
  "Project": {
   "id": "Project",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "managerID": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "teachingTerm": {
     "type": "string",
     "format": "int64"
    },
    "users": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "Sprint": {
   "id": "Sprint",
   "type": "object",
   "properties": {
    "deadline": {
     "type": "string",
     "format": "date-time"
    },
    "id": {
     "$ref": "Key"
    },
    "sprintNumber": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "TeachingTerm": {
   "id": "TeachingTerm",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    },
    "joinable": {
     "type": "boolean"
    },
    "label": {
     "type": "string"
    },
    "sprints": {
     "type": "array",
     "items": {
      "$ref": "Sprint"
     }
    }
   }
  },
  "User": {
   "id": "User",
   "type": "object",
   "properties": {
    "defaultTeachingTerm": {
     "type": "string",
     "format": "int64"
    },
    "email": {
     "type": "string"
    },
    "givenName": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "projects": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    },
    "surName": {
     "type": "string"
    },
    "type": {
     "$ref": "UserType"
    }
   }
  },
  "UserCollection": {
   "id": "UserCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "User"
     }
    }
   }
  },
  "UserType": {
   "id": "UserType",
   "type": "string",
   "enum": [
    "ADMIN",
    "MODERATOR",
    "USER"
   ],
   "enumDescriptions": [
    "",
    "",
    ""
   ]
  }
 },
 "methods": {
  "findUser": {
   "id": "happiness.findUser",
   "path": "userlist",
   "httpMethod": "POST",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    },
    "searchString": {
     "type": "string",
     "required": true,
     "location": "query"
    }
   },
   "parameterOrder": [
    "searchString"
   ],
   "response": {
    "$ref": "CollectionResponse_User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getCurrentSprint": {
   "id": "happiness.getCurrentSprint",
   "path": "sprint",
   "httpMethod": "GET",
   "parameters": {
    "teachingTerm": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "query"
    }
   },
   "parameterOrder": [
    "teachingTerm"
   ],
   "response": {
    "$ref": "Sprint"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getCurrentUser": {
   "id": "happiness.getCurrentUser",
   "path": "user",
   "httpMethod": "GET",
   "response": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getHapiness": {
   "id": "happiness.getHapiness",
   "path": "hapiness/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "Hapiness"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getProject": {
   "id": "happiness.getProject",
   "path": "project/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "Project"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getTeachingTerm": {
   "id": "happiness.getTeachingTerm",
   "path": "teachingterm/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "TeachingTerm"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getUser": {
   "id": "happiness.getUser",
   "path": "getUser",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "location": "query"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insertHapiness": {
   "id": "happiness.insertHapiness",
   "path": "hapiness/{happiness}/{projectID}/{userName}",
   "httpMethod": "POST",
   "parameters": {
    "happiness": {
     "type": "integer",
     "required": true,
     "format": "int32",
     "location": "path"
    },
    "projectID": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    },
    "userName": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "happiness",
    "projectID",
    "userName"
   ],
   "response": {
    "$ref": "Hapiness"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insertProject": {
   "id": "happiness.insertProject",
   "path": "project",
   "httpMethod": "POST",
   "request": {
    "$ref": "Project",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Project"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insertTeachingTerm": {
   "id": "happiness.insertTeachingTerm",
   "path": "teachingterm",
   "httpMethod": "POST",
   "request": {
    "$ref": "TeachingTerm",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "TeachingTerm"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insertUser": {
   "id": "happiness.insertUser",
   "path": "user",
   "httpMethod": "POST",
   "request": {
    "$ref": "User",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "joinProject": {
   "id": "happiness.joinProject",
   "path": "joinProject/{id}",
   "httpMethod": "POST",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "listHapiness": {
   "id": "happiness.listHapiness",
   "path": "happinessStats",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    },
    "projectId": {
     "type": "string",
     "format": "int64",
     "location": "query"
    },
    "teachingTerm": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "query"
    }
   },
   "parameterOrder": [
    "teachingTerm"
   ],
   "response": {
    "$ref": "CollectionResponse_Hapiness"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "listManager": {
   "id": "happiness.listManager",
   "path": "manager",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    }
   },
   "response": {
    "$ref": "CollectionResponse_User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "listProject": {
   "id": "happiness.listProject",
   "path": "projectList",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    },
    "teachingTerm": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "query"
    }
   },
   "parameterOrder": [
    "teachingTerm"
   ],
   "response": {
    "$ref": "CollectionResponse_Project"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "listTeachingTerm": {
   "id": "happiness.listTeachingTerm",
   "path": "teachingterm",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    }
   },
   "response": {
    "$ref": "CollectionResponse_TeachingTerm"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "listUser": {
   "id": "happiness.listUser",
   "path": "user/{projectID}",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    },
    "projectID": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "projectID"
   ],
   "response": {
    "$ref": "UserCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "removeHapiness": {
   "id": "happiness.removeHapiness",
   "path": "hapiness/{id}",
   "httpMethod": "DELETE",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "removeProject": {
   "id": "happiness.removeProject",
   "path": "project/{id}",
   "httpMethod": "DELETE",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "removeTeachingTerm": {
   "id": "happiness.removeTeachingTerm",
   "path": "teachingterm/{id}",
   "httpMethod": "DELETE",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "removeUser": {
   "id": "happiness.removeUser",
   "path": "user/{id}",
   "httpMethod": "DELETE",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "renameTeachingTerm": {
   "id": "happiness.renameTeachingTerm",
   "path": "renameTeachingTerm/{id}/{label}",
   "httpMethod": "POST",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    },
    "label": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "id",
    "label"
   ],
   "response": {
    "$ref": "TeachingTerm"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "setDefaultTeachingTerm": {
   "id": "happiness.setDefaultTeachingTerm",
   "path": "setDefaultTeachingTerm/{defaultTeachingTerm}",
   "httpMethod": "POST",
   "parameters": {
    "defaultTeachingTerm": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "defaultTeachingTerm"
   ],
   "response": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "updateHapiness": {
   "id": "happiness.updateHapiness",
   "path": "hapiness",
   "httpMethod": "PUT",
   "request": {
    "$ref": "Hapiness",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Hapiness"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "updateProject": {
   "id": "happiness.updateProject",
   "path": "project",
   "httpMethod": "PUT",
   "request": {
    "$ref": "Project",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Project"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "updateTeachingTerm": {
   "id": "happiness.updateTeachingTerm",
   "path": "teachingterm",
   "httpMethod": "PUT",
   "request": {
    "$ref": "TeachingTerm",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "TeachingTerm"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "updateUser": {
   "id": "happiness.updateUser",
   "path": "user",
   "httpMethod": "PUT",
   "request": {
    "$ref": "User",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 },
 "resources": {
  "teachingTerm": {
   "methods": {
    "setJoinable": {
     "id": "happiness.teachingTerm.setJoinable",
     "path": "setJoinable/{id}/{joinable}",
     "httpMethod": "POST",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "joinable": {
       "type": "boolean",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id",
      "joinable"
     ],
     "response": {
      "$ref": "TeachingTerm"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    }
   }
  }
 }
}
